#!/bin/sh
# This shell script provides a predictable docker-based version of the application in use.
# Thereby creating a predictable environment for development, building, and debugging

IMAGE="nginx:latest"

# Bash parameter expansion will only replace _null_ with --interactive --tty
# the first "-" is for configuring the expansion mode
export DOCKER_OPTS="${DOCKER_OPTS---interactive --tty}"

# the expr substr command has a different syntax on OSX
if [ "$(uname)" != "Darwin" ] && [ "$(expr substr "$(uname -s)" 1 5)" = "Linux" ]; then
  # --user and --group-add options simulate the current user inside the docker container
  # this is necessary because otherwise the command would run as root inside docker
  # and created files and folder on the host would then belong to host:$(pwd)/root:root
  LINUX_OPTS="--user $(id -u)"
fi
LINUX_OPTS="${LINUX_OPTS-}"

# Render nginx.conf file to later mount it into the docker container
cat > nginx.conf << HEREDOC
  server {
          listen 80 default_server;
          listen [::]:80 default_server;
          root /var/www/html;
          index index.html index.htm index.nginx-debian.html;
          server_name reverseProxy;

          location ^~ /assets/ {
                  gzip_static on;
                  expires 12h;
                  add_header Cache-Control public;
          }

          location / {
                  proxy_http_version 1.1;
                  proxy_cache_bypass \$http_upgrade;

                  proxy_set_header Upgrade \$http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;

                  proxy_pass $@;
          }
  }
HEREDOC



exec docker run --rm $DOCKER_OPTS $LINUX_OPTS         \
  --detach --name reverse-proxy                       \
  --publish 80:80                                     \
  --volume  /var/run/docker.sock:/var/run/docker.sock \
  --volume  "$(pwd)/nginx.conf":/etc/nginx/conf.d/default.conf  \
  --volume  "$(pwd)":"$(pwd)"                         \
  --workdir "$(pwd)"                                  \
  "$IMAGE"

